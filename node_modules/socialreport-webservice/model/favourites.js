'use strict';

var async = require('async');
var chalk = require('chalk');
var Promise = require('bluebird');
var socialClientHandler = require('../config/socialclient.js');
var socialclient = socialClientHandler();
var ObjectID = require('mongodb').ObjectID;

// User model
module.exports = function (app, callback) {
    app.db.collection('favourites', function (err, collection) {
        var model = {

            processFavourites: function (account, channel, accountName, callback) {
                var acct = account;

                switch (channel) {
                    case "twitter":
                        console.log("Getting Twitter favourites for: " + accountName);
                        var options = {screen_name: accountName, user_id: accountName, count: 200};
                        var action = "favorites/list";

                        socialclient.getFavourites(channel, action, options).then(function (favourites) {
                            console.log("resolved getFavourites");
                            console.log(favourites.length);

                            var account = {
                                account: {
                                    id: new ObjectID(acct),
                                    favourites: []
                                }
                            };
                            // save fields that we want and put in db.
                            favourites.forEach( function (favourite) {
                                account.account.favourites.push({
                                    text: favourite.text,
                                    date: favourite.created_at
                                });
                            });

                            var results = Promise.all(account.account.favourites);

                            results.then(function (data) {
                                console.log("acount to update in db: " + account.account.id);
                                //callback(null, data);
                                //console.log("obj: " + JSON.stringify(account.account));

                                 collection.update(
                                    {"account.id": account.account.id},
                                    {account: account.account},
                                    {upsert: true},
                                    function (err, result) {
                                        callback(null, result);
                                 });
                            });
                        });

                        break;
                    case "facebook":
                        console.log("Getting Facebook favourites for: " + accountName);
                        callback(null, [{text: "No Favourites"}]);
                        break;
                    case "linkedin":
                        console.log("Getting LinkedIn favourites for: " + accountName);
                        callback(null, [{text: "No Favourites"}]);
                        break;
                    default:
                }


            },

            getFavourites: function (account, callback) {
                var id = new ObjectID(account);

                collection
                    .find({"account.id": id})
                   // .sort({followers_count: -1})
                    .toArray(function (err, results) {
                        if (err) {
                            return callback(err);
                        }
                        callback(null, results);
                    });
            }
        };
        callback(null, model);
    });
}